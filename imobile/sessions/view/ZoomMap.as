package imobile.sessions.view{	import flash.display.MovieClip;	import flash.display.DisplayObject;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.ui.Mouse;	import flash.utils.getDefinitionByName;		public class ZoomMap extends MovieClip	{		private var _cursor:DisplayObject;		private var CURSOR:String;				public function ZoomMap() 		{ 			cursorID = "MagnifyInCursor";			getInstance(); 		}					public function getInstance()		{			stop();			addEventListener(Event.ADDED, magnifyOn, false, 0, true);		}				public function set cursorID(param:String):void		{			this.CURSOR = param;		}				public function zoomIn(e:Event):void		{			nextFrame();			if(currentFrame == totalFrames) doneZoom();		}				private function doneZoom():void		{			magnifyOff();			dispatchEvent(new Event("done_zoom"));		}				private function magnifyOff():void		{            Mouse.show();			removeEventListener("click", zoomIn);            removeEventListener(MouseEvent.MOUSE_OVER, mouseOverHandler);            removeEventListener(MouseEvent.MOUSE_OUT, mouseOutHandler);			stage.removeEventListener(Event.MOUSE_LEAVE, mouseLeaveHandler);            removeChild(_cursor);		}				private function magnifyOn(e:Event):void		{			removeEventListener(Event.ADDED, magnifyOn);			addEventListener("click", zoomIn, false, 0, true);            addEventListener(MouseEvent.MOUSE_OVER, mouseOverHandler, false, 0, true);            addEventListener(MouseEvent.MOUSE_OUT, mouseOutHandler, false, 0, true);			var Cursor:Class = getDefinitionByName(CURSOR) as Class;            _cursor = new Cursor();            _cursor.visible = false;            addChild(_cursor);            stage.addEventListener(Event.MOUSE_LEAVE, mouseLeaveHandler, false, 0, true);        }        private function mouseOverHandler(event:MouseEvent):void 		{            Mouse.hide();            addEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler, false, 0, true);        }        private function mouseOutHandler(event:MouseEvent):void 		{            Mouse.show();            removeEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler);            _cursor.visible = false;        }        private function mouseMoveHandler(event:MouseEvent):void 		{            _cursor.x = event.localX + 15;            _cursor.y = event.localY + 15;            event.updateAfterEvent();            _cursor.visible = true;        }        private function mouseLeaveHandler(event:Event):void 		{            mouseOutHandler(new MouseEvent(MouseEvent.MOUSE_MOVE));        }	}	}