package imobile.sessions.guide.view {	import fl.events.ScrollEvent;	import imobile.sessions.guide.view.LessonBase;	import imobile.sessions.controller.ApplicationController;	import flash.display.MovieClip;	import flash.events.Event;		public class Lesson_02 extends LessonBase	{				public function Lesson_02()	{ getInstance(); }				public override function updateAppStatus():void		{			/* 	CHANGING THE APPLICATION STATE TO THE PROPER 			*   _application.resetState(			*							changeScreen:String="i-mobile", 	// i-mobile, complex_cards, blank			*							showMap:Boolean=false,				// true, false			*							changeStatus:String="available",	// available, enroute, dispatched, arrive, avstation			*							changeStatusNumbers:String="0",		// 0, 1, 2 			*							mainWindow:String="",				//			*							dispatchReportWindow:String="",		//			*							eventListWindow:String=""			//			*						   )			*/			switch(currentFrame)			{				case 1:					_application.resetState("blank",false,"available","0",undefined,undefined,undefined);					break;				case 2:				case 3:					_application.resetState("i-mobile",false,"available","0","event_report_form",undefined,undefined);					break;				case 4:					_application.resetState("i-mobile",false,"available","0","event_report_form","event_list","msg_list");					 _application.dispatchReportWindow.content.gotoAndStop(3);					break;				case 5:					_application.resetState("i-mobile",false,"available","0","event_report_form","event_list","msg_list");					 _application.dispatchReportWindow.content.gotoAndStop(3);					 _application.eventListWindow.content.gotoAndStop(3);					break;								}			removeStartListener();			removeScrollDownListener();			getCurrentFunctionality();		}				public override function getCurrentFunctionality():void		{			trace("LESSON 2 CURRENT FRAME: " + String(currentFrame + (_step/10)));			if(_multiSteps == _step) _multiSteps = 0;			ApplicationController.getInstance().disableAllButtons();			switch(currentFrame + (_step/10))			{				case 1:					_multiSteps = 1;					_application.changeScreen("blank");					bubbles.gotoAndStop(2);					ApplicationController.getInstance().enableButtons([																	   _application["START"]																	  ]);					setInteractListener("START_APP");					setStartListener();					break;				case 1.1:					removeStartListener();					bubbles.gotoAndStop(1);					_application.addMainWindowItem("welcome");					ApplicationController.getInstance().setTimer(1);					setInteractListener(ApplicationController.TIMER_DONE);					break;				case 2:					_application.addMainWindowItem("event_report_form");					var ne_popup:MovieClip = _application.newEventPopup();					ApplicationController.getInstance().enableButtons([																	   ne_popup["ENROUTE"]																	  ]);					setInteractListener("ENROUTE");					break;				case 3:					_multiSteps = 1;					_application.removePopup();					ApplicationController.getInstance().enableButtons([																	   _application["imobile_interface"]["RECALL"]																	  ]);					setInteractListener("RECALL");					break;				case 3.1:					bubbles.gotoAndStop(2);					_application.addEventListItem("msg_list");					_application.addDispatchReportItem("event_list");					ApplicationController.getInstance().enableButtons([																	   _application.dispatchReportWindow.content																	  ]);					setInteractListener("DISPATCH_CONTENT");					break;				case 4:					 _application.dispatchReportWindow.content.gotoAndStop(3);					ApplicationController.getInstance().enableButtons([																	   _application.eventListWindow.content																	  ]);					setInteractListener("EVENT_CONTENT");					break;				case 5:					 _application.eventListWindow.content.gotoAndStop(3);					 addScrollDownListener();					break;							}		}				private function setStartListener()		{			_application["START"].addEventListener("click", positionStartBubble, false, 0, true);		}				private function removeStartListener()		{			try			{				_application["START"].removeEventListener("click", positionStartBubble);			}catch(e:*) {}		}				private function positionStartBubble(e:Event)		{			bubbles.y += e.target.STATE ? -(_application.start_menu.height) : _application.start_menu.height;		}				private function addScrollDownListener():void		{			_application.mainWindow.addEventListener(ScrollEvent.SCROLL, scrollHandler, false, 0, true);		}				private function scrollHandler(e:ScrollEvent):void		{			 if(e.position >= e.currentTarget.maxVerticalScrollPosition)			 {			 	removeScrollDownListener();				proceed(new Event("scrolled_down"));			 }		}				private function removeScrollDownListener():void		{			try			{				_application.mainWindow.removeEventListener(ScrollEvent.SCROLL, scrollHandler);			}catch(e:*) {}		}	}}