package imobile.sessions.guide.view {	import imobile.sessions.guide.view.LessonBase;	import imobile.sessions.controller.ApplicationController;	import flash.display.MovieClip;	import flash.events.Event;	import flash.ui.Keyboard;	import flash.events.KeyboardEvent;	import flash.events.MouseEvent;		public class Lesson_06 extends LessonBase	{		private var _currentListItem:MovieClip;		private var _popup:nav_menu;				public function Lesson_06()	{ getInstance(); }				public override function updateAppStatus():void		{			/* 	CHANGING THE APPLICATION STATE TO THE PROPER 			*   _application.resetState(			*							changeScreen:String="i-mobile", 	// i-mobile, complex_cards, blank			*							showMap:Boolean=false,				// true, false			*							changeStatus:String="available",	// available, enroute, dispatched, arrive, avstation			*							changeStatusNumbers:String="0",		// 0, 1, 2 			*							mainWindow:String="",				//			*							dispatchReportWindow:String="",		//			*							eventListWindow:String=""			//			*						   )			*/			//removeScrollDownListener();			getCurrentFunctionality();		}				public override function getCurrentFunctionality():void		{			trace("LESSON 6 CURRENT FRAME: " + String(currentFrame + (_step/10)));			if(_multiSteps == _step) _multiSteps = 0;			ApplicationController.getInstance().disableAllButtons();			switch(currentFrame + (_step/10))			{				case 1:					_multiSteps = 3;					_application.visible = false;					bubbles.gotoAndStop(2);					//mi_1.addEventListener("click", miSelected, false, 0, true);					break;				case 1.1:					bubbles.gotoAndStop(3);					break;				case 1.2:					bubbles.gotoAndStop(4);					//mi_2.addEventListener("click", miSelected, false, 0, true);					//mi_3.addEventListener("click", miSelected, false, 0, true);					break;				case 1.3:					break;				case 2:					//HIDE_SHOW.addEventListener(MouseEvent.MOUSE_DOWN, hideShow, false, 0, true);					break;				case 3:					_multiSteps = 2;					//navigateButton.addEventListener(MouseEvent.MOUSE_DOWN, showNavMenu, false, 0, true);					break;				case 3.1:					bubbles.gotoAndStop(2);					_popup = new nav_menu();					_popup.x = 830;					_popup.y = 250;					addChildAt(_popup, 3);					_popup['RESET_BUTTON'].addEventListener("click", resetNav, false, 0, true);					break;				case 3.2:					bubbles.gotoAndStop(3);					break;			}		}				public override function setStageListeners():void		{			switch(currentFrame + (_step/10))			{				case 1:					mi_1.addEventListener("click", miSelected, false, 0, true);					break;				case 1.2:					mi_2.addEventListener("click", miSelected, false, 0, true);					mi_3.addEventListener("click", miSelected, false, 0, true);					break;				case 2:					HIDE_SHOW.addEventListener(MouseEvent.MOUSE_DOWN, hideShow, false, 0, true);					break;				case 3:					navigateButton.addEventListener(MouseEvent.MOUSE_DOWN, showNavMenu, false, 0, true);					break;			}		}				private function resetNav(e:Event):void		{			_popup['RESET_BUTTON'].removeEventListener("click", resetNav);			removeChild(_popup);			map.gotoAndStop(2);			proceed(e);		}				private function showNavMenu(e:MouseEvent):void		{			navigateButton.removeEventListener(MouseEvent.MOUSE_DOWN, showNavMenu);			proceed(e);		}				private function hideShow(e:MouseEvent):void		{			HIDE_SHOW.removeEventListener(MouseEvent.MOUSE_DOWN, hideShow);			proceed(e);		}				private function miSelected(e:Event):void		{						_currentListItem = MovieClip(e.target);			e.target.removeEventListener("click", miSelected);			e.target.gotoAndStop(2);			stage.addEventListener(KeyboardEvent.KEY_DOWN, deleteHandler, false, 0, true);			if(_step < 2) proceed(e);		}				private function deleteHandler(e:KeyboardEvent):void		{			trace(e);			//if(e.keyCode == 68)			if(e.keyCode == Keyboard.BACKSPACE)			{				_currentListItem.gotoAndStop(3);				stage.removeEventListener(KeyboardEvent.KEY_DOWN, deleteHandler);				proceed(e);			}		}	}}